body {
  font-family: "Arial", sans-serif;
  line-height: 1.6;
  margin: 0;
  padding: 0;
  background-color: #f4f4f4;
  color: #333;
}
/*真ん中に寄せる*/
.center {
  display: flex;
  justify-content: center; /* 水平方向 */
  align-items: center;
}

form {
  max-width: 500px;
  margin: 0 auto;
  padding: 20px;
  background: #f9f9f9;
  border-radius: 8px;
}

label {
  display: block;
  margin-top: 10px;
  font-weight: bold;
}

input,
textarea,
select {
  width: 100%;
  padding: 8px;
  margin-top: 5px;
  border: 1px solid #ccc;
  border-radius: 4px;
}

.container {
  width: 80%;
  margin: 0 auto;
  padding: 20px;
  background: #fff;
  box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
  margin-top: 30px;
  border-radius: 5px;
  animation: fadeIn 0.8s ease-out;
}
.large {
  font-size: 25px;
  margin: 10px;
  padding-bottom: 10px;
  margin-top: 20px;
  transition: all 0.3s ease;
}

.normal {
  color: #ffffff;
  font-size: 20px;
  margin: 10px;
  padding-bottom: 10px;
  margin-top: 20px;
  transition: all 0.3s ease;
}

h1 {
  color: #454545;
  border-bottom: 2px solid #eee;
  padding-bottom: 10px;
}

.content {
  margin-top: 20px;
}

button {
  background: #3498db;
  color: white;
  border: none;
  padding: 10px 15px;
  margin: 5px;
  border-radius: 5px;
  cursor: pointer;
  font-size: 16px;
  transition: all 0.3s ease;
}

button:hover {
  background: #2980b9;
  transform: translateY(-2px);
  box-shadow: 0 5px 15px rgba(0, 0, 0, 0.2);
}

#changeText {
  padding: 10px;
  background: #f9f9f9;
  border-radius: 5px;
  transition: all 0.3s ease;
}

.topnav {
  overflow: hidden;
  background-color: #424242;
}

.topnav a {
  float: left;
  display: block;
  color: #ffffff;
  text-align: center;
  padding: 14px 16px;
  text-decoration: none;
  font-size: 17px;
  transition: all 0.3s ease;
  position: relative;
}

.topnav a::after {
  content: "";
  position: absolute;
  width: 0;
  height: 2px;
  bottom: 0;
  left: 50%;
  background-color: #4caf50;
  transition: all 0.3s ease;
}

.topnav a:hover::after {
  width: 100%;
  left: 0;
}

.topnav a.active {
  background-color: #4caf50;
  color: rgb(0, 0, 0);
}

/* ハンバーガーメニューのスタイル */
.topnav .icon {
  display: none; /* Hide by default */
  float: right; /* Keep it floated right for when it's displayed */
}

@media screen and (max-width: 600px) {
  /* Initially hide all nav links in .center, only icon should be visible via later .icon rule */
  .topnav .center a:not(.icon) {
    display: none;
  }

  .topnav a.icon {
    /* This rule was already present and correct for showing the icon */
    display: block;
    /* float: right; is part of the default .topnav .icon style if defined outside media query, or can be added here */
  }

  .topnav.responsive {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-color: #3a3a3a;
    z-index: 1000;
    overflow-y: auto;
  }

  .topnav.responsive .center {
    display: flex;
    flex-direction: column;
    align-items: stretch;
    justify-content: flex-start;
    height: 100%;
    /* padding-top: 70px; Adjusted - icon is part of flex flow now if not absolutely positioned */
    box-sizing: border-box;
    overflow-y: auto;
    padding-top: 20px; /* General padding at the top of the menu */
  }

  .topnav.responsive .icon {
    /* This is the close icon */
    order: -2; /* Ensure it's visually at the very top OR handle with absolute positioning */
    /* Using absolute positioning as before is likely better for a dedicated close button */
    position: absolute; /* Keep it absolute for precise placement */
    right: 15px;
    top: 15px;
    font-size: 28px;
    padding: 10px;
    border-bottom: none;
    width: auto;
    color: #ffffff;
    text-decoration: none;
    z-index: 1001; /* Above other content in the overlay */
  }

  .topnav.responsive .center a {
    display: block;
    text-align: center;
    padding: 15px 16px;
    color: #ffffff;
    text-decoration: none;
    border-bottom: 1px solid #555555;
    box-sizing: border-box;
  }

  .topnav.responsive .center a.icon {
    /* Reset specific styles for the icon if it's part of .center a general styling */
    border-bottom: none; /* Handled by .topnav.responsive .icon specific rule */
    /* Icon specific positioning and look is handled by .topnav.responsive .icon */
    /* If icon is truly part of .center a flow and not absolute, it needs different handling */
    /* Given previous structure, icon is an 'a' tag within .center. */
    /* If it's to be treated as a close button separate from link list, it needs distinct styling like position:absolute */
    /* The .topnav.responsive .icon rule above should handle this if the icon is class="icon" */
    /* Let's ensure the generic '.topnav.responsive .center a' doesn't override the icon too much */
    /* The more specific '.topnav.responsive .icon' will win for most properties */
    display: none; /* Hide the original icon link if we are using the absolutely positioned one as the close button */
  }

  .topnav.responsive .center a.active {
    /* Active link as header */
    order: -1; /* Place it before other non-icon links */
    font-size: 1.6em;
    font-weight: bold;
    color: #ffffff; /* Highlight active link color */
    padding-top: 30px; /* More space above active link */
    padding-bottom: 20px;
    margin-bottom: 15px; /* Space below active link header */
    border-bottom: none; /* No border for the header-like active link */
  }

  .topnav.responsive .center a:not(.active):not(.icon) {
    /* Regular links */
    /* padding, color, text-decoration, border-bottom are set by .topnav.responsive .center a */
    /* No specific overrides needed here unless to change something from the general .center a style */
  }

  .topnav.responsive .center a:not(.icon):hover {
    background-color: #555555;
  }

  .topnav.responsive .center a.active:hover {
    /* Prevent hover on active if it's a header */
    background-color: transparent; /* Or same as its background */
  }
}
/*ここまで*/

/* アニメーションの基本設定 */
@keyframes fadeIn {
  from {
    opacity: 0;
    transform: translateY(20px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

@keyframes slideIn {
  from {
    transform: translateX(-100%);
  }
  to {
    transform: translateX(0);
  }
}

.large:hover,
.normal:hover {
  transform: scale(1.05);
  color: #3498db;
}

/* スクロールアニメーション用のクラス */

.scroll-animate.visible {
  opacity: 1;
  transform: translateY(0);
}

/* フォーム要素のアニメーション */
input,
textarea,
select {
  transition: all 0.3s ease;
}

input:focus,
textarea:focus,
select:focus {
  transform: scale(1.02);
  box-shadow: 0 0 10px rgb(255, 255, 255);
  outline: none;
  border-color: #3498db;
}

/* プロジェクトカードのスタイル */
.project-card {
  background: #000000;
  border-radius: 10px;
  padding: 20px;
  margin: 20px 0;
  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
  transition: all 0.3s ease;
}

.project-card:hover {
  transform: translateY(-5px);
  box-shadow: 0 8px 15px rgba(0, 0, 0, 0.2);
}

.project-details {
  margin-top: 15px;
  padding-top: 15px;
  border-top: 1px solid #eee;
}

.project-details p {
  margin: 10px 0;
  color: #ffffff;
}

.project-card button {
  margin-top: 15px;
  background: #2ecc71;
}

.project-card button:hover {
  background: #27ae60;
}

/* プロジェクトページのレイアウト調整 */
.content {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
  gap: 20px;
  padding: 20px 0;
}

@media screen and (max-width: 768px) {
  .content {
    grid-template-columns: 1fr;
  }
}

/* ヘッダーコンテナのスタイル */
.header-container {
  position: relative;
  display: flex;
  justify-content: space-between;
  align-items: center;
  margin-bottom: 20px;
}

/* 右上の画像スタイル */
.top-right-image {
  width: 100px;
  height: 100px;
  object-fit: cover;
  border-radius: 10px;
  box-shadow: 0 2px 5px rgba(0, 0, 0, 0.2);
}

@media screen and (max-width: 600px) {
  .top-right-image {
    width: 60px;
    height: 60px;
  }

  .header-container {
    flex-direction: column;
    align-items: flex-start;
  }

  .top-right-image {
    position: absolute;
    top: 0;
    right: 0;
  }
}
